name: CI Details

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Log Checkout Completion
        run: echo "Código fonte verificado com sucesso."

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Install Dependencies
        run: |
          echo "Instalando dependências do projeto..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "Dependências instaladas com sucesso."

      - name: Create Directories for K6
        run: |
          mkdir -p tests/performance_tests/k6_scripts
          mkdir -p reports/performance
          echo "Diretórios para testes K6 criados com sucesso."

      - name: Pull K6 Docker Image
        run: |
          echo "Baixando a imagem Docker do K6..."
          docker pull grafana/k6:latest
          echo "Imagem Docker do K6 baixada com sucesso."

      - name: Check Docker Status
        run: |
          echo "Verificando status do Docker..."
          docker --version
          docker info
          echo "Docker está operacional."

      - name: List Directory Structure
        run: |
          echo "Estrutura de diretórios do projeto:"
          find . -type d | sort

      - name: Run Robot Framework Tests (Excluding Performance)
        run: |
          echo "Executando os testes do Robot Framework (exceto performance)..."
          robot --outputdir results --exclude performance tests/ || true

      - name: Run Performance Tests Separately
        run: |
          echo "Executando os testes de performance separadamente..."
          robot --outputdir results/performance --include performance tests/performance_tests/ || true

      - name: Extract Test Results
        run: |
          echo "Sumário de Resultados:"
          [ -f results/output.xml ] && grep -c 'status="PASS"' results/output.xml || echo "0 testes passaram"
          [ -f results/output.xml ] && grep -c 'status="FAIL"' results/output.xml || echo "0 testes falharam"

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            results/
            reports/performance/
      - name: Log Upload Completion
        run: echo "Relatórios de testes enviados como artefatos com sucesso."